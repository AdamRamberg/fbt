// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should accept well-formed options" 1`] = `
Array [
  Object {
    "author": "jwatson",
    "col_beg": 0,
    "col_end": 89,
    "desc": "options!",
    "filepath": undefined,
    "jsfbt": "A string that moved files",
    "line_beg": 2,
    "line_end": 2,
    "project": "Super Secret",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should allow description concatenation" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 27,
    "desc": "With a ridiculously long description that requires concatenation",
    "filepath": undefined,
    "jsfbt": "A short string",
    "line_beg": 2,
    "line_end": 3,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should be able to nest within React nodes" 1`] = `
Array [
  Object {
    "col_beg": 5,
    "col_end": 38,
    "desc": "nested!",
    "filepath": undefined,
    "jsfbt": "A nested string",
    "line_beg": 4,
    "line_end": 4,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should convert simple strings" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 45,
    "desc": "It's simple",
    "filepath": undefined,
    "jsfbt": "A simple string",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should get project from docblock" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 48,
    "desc": "It's simple",
    "filepath": undefined,
    "jsfbt": "Also simple string",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should handle duplicate enums in templates" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 194,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "groups",
            "photos",
            "videos",
          ],
        },
      ],
      "t": Object {
        "groups": "Look! Groups and groups!",
        "photos": "Look! Photos and photos!",
        "videos": "Look! Videos and videos!",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should handle duplicate enums" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 201,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "groups",
            "photos",
            "videos",
          ],
        },
      ],
      "t": Object {
        "groups": "Look! Groups and groups!",
        "photos": "Look! Photos and photos!",
        "videos": "Look! Videos and videos!",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should handle enums (with array values)" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 91,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "groups",
            "photos",
            "videos",
          ],
        },
      ],
      "t": Object {
        "groups": "Click to see groups",
        "photos": "Click to see photos",
        "videos": "Click to see videos",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should handle enums (with value map)" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 98,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "id1",
            "id2",
            "id3",
          ],
        },
      ],
      "t": Object {
        "id1": "Click to see groups",
        "id2": "Click to see photos",
        "id3": "Click to see videos",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should handle enums with more text after" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 91,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "range": Array [
            "groups",
            "photos",
            "videos",
          ],
        },
      ],
      "t": Object {
        "groups": "Hello, groups!",
        "photos": "Hello, photos!",
        "videos": "Hello, videos!",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should handle multiple plurals with no showCount (i.e. no named params)" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 143,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "type": 2,
        },
        Object {
          "singular": true,
          "token": "number",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "There are {number} likes",
          "_1": "There are a like",
        },
        "_1": Object {
          "*": "There is {number} likes",
          "_1": "There is a like",
        },
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should handle names" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 81,
    "desc": "names",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "name",
          "type": 1,
        },
      ],
      "t": Object {
        "*": "You just friended {name}",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should handle object pronoun" 1`] = `
Array [
  Object {
    "col_beg": 9,
    "col_end": 109,
    "desc": "object pronoun",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "type": 3,
        },
      ],
      "t": Object {
        "*": "You wished them a happy birthday.",
        "1": "You wished her a happy birthday.",
        "2": "You wished him a happy birthday.",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should handle params" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 110,
    "desc": "Moar params",
    "filepath": undefined,
    "jsfbt": "A parameterized message to {personName}",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should handle plurals" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 162,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "type": 2,
        },
        Object {
          "singular": true,
          "token": "number",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "There were {number} likes",
          "_1": "There were a like",
        },
        "_1": Object {
          "*": "There was {number} likes",
          "_1": "There was a like",
        },
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should handle possessive pronoun" 1`] = `
Array [
  Object {
    "col_beg": 9,
    "col_end": 104,
    "desc": "possessive pronoun",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "type": 3,
        },
      ],
      "t": Object {
        "*": "It is their birthday.",
        "1": "It is her birthday.",
        "2": "It is his birthday.",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should handle subject and reflexive pronouns" 1`] = `
Array [
  Object {
    "col_beg": 9,
    "col_end": 176,
    "desc": "subject+reflexive pronouns",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "type": 3,
        },
        Object {
          "type": 3,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "They wished themselves a happy birthday.",
          "0": "They wished themself a happy birthday.",
          "1": "They wished herself a happy birthday.",
          "2": "They wished himself a happy birthday.",
        },
        "1": Object {
          "*": "She wished themselves a happy birthday.",
          "0": "She wished themself a happy birthday.",
          "1": "She wished herself a happy birthday.",
          "2": "She wished himself a happy birthday.",
        },
        "2": Object {
          "*": "He wished themselves a happy birthday.",
          "0": "He wished themself a happy birthday.",
          "1": "He wished herself a happy birthday.",
          "2": "He wished himself a happy birthday.",
        },
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should handle variations + same param" 1`] = `
Array [
  Object {
    "col_beg": 0,
    "col_end": 171,
    "desc": "test variations + sameParam",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "count",
          "type": 2,
        },
      ],
      "t": Object {
        "*": "You have {count} likes. Comment on it to get more than {count} likes",
      },
    },
    "line_beg": 3,
    "line_end": 3,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should handle variations" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 94,
    "desc": "variations!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "count",
          "type": 2,
        },
      ],
      "t": Object {
        "*": "Click to see {count} links",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should handler wrapping parens" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 50,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
  Object {
    "col_beg": 8,
    "col_end": 52,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 3,
    "line_end": 3,
    "project": "",
    "type": "text",
  },
  Object {
    "col_beg": 8,
    "col_end": 52,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 4,
    "line_end": 4,
    "project": "",
    "type": "text",
  },
  Object {
    "col_beg": 8,
    "col_end": 54,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 5,
    "line_end": 5,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should insert param in place of fbt.sameParam if it exists" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 76,
    "desc": "d",
    "filepath": undefined,
    "jsfbt": "{name1} and {name1}",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should maintain intra-argument newlines" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 1,
    "desc": "a",
    "filepath": undefined,
    "jsfbt": "{name1} blah {name2}",
    "line_beg": 2,
    "line_end": 9,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should maintain newlines when using templates" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 9,
    "desc": "blah",
    "filepath": undefined,
    "jsfbt": "A simple string... with some other stuff.",
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should maintain newlines within arguments" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 1,
    "desc": "a",
    "filepath": undefined,
    "jsfbt": "a b {name1} c d {name2} e",
    "line_beg": 2,
    "line_end": 11,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data (react native) for scenario "should maintain newlines" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 9,
    "desc": "blah",
    "filepath": undefined,
    "jsfbt": "A simple string... with some other stuff.",
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should accept well-formed options" 1`] = `
Array [
  Object {
    "author": "jwatson",
    "col_beg": 0,
    "col_end": 89,
    "desc": "options!",
    "filepath": undefined,
    "jsfbt": "A string that moved files",
    "line_beg": 2,
    "line_end": 2,
    "project": "Super Secret",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should allow description concatenation" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 27,
    "desc": "With a ridiculously long description that requires concatenation",
    "filepath": undefined,
    "jsfbt": "A short string",
    "line_beg": 2,
    "line_end": 3,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should be able to nest within React nodes" 1`] = `
Array [
  Object {
    "col_beg": 5,
    "col_end": 38,
    "desc": "nested!",
    "filepath": undefined,
    "jsfbt": "A nested string",
    "line_beg": 4,
    "line_end": 4,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should convert simple strings" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 45,
    "desc": "It's simple",
    "filepath": undefined,
    "jsfbt": "A simple string",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should get project from docblock" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 48,
    "desc": "It's simple",
    "filepath": undefined,
    "jsfbt": "Also simple string",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should handle duplicate enums in templates" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 194,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "groups": "Look! Groups and groups!",
        "photos": "Look! Photos and photos!",
        "videos": "Look! Videos and videos!",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should handle duplicate enums" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 201,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "groups": "Look! Groups and groups!",
        "photos": "Look! Photos and photos!",
        "videos": "Look! Videos and videos!",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should handle enums (with array values)" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 91,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "groups": "Click to see groups",
        "photos": "Click to see photos",
        "videos": "Click to see videos",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should handle enums (with value map)" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 98,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "id1": "Click to see groups",
        "id2": "Click to see photos",
        "id3": "Click to see videos",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should handle enums with more text after" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 91,
    "desc": "enums!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "groups": "Hello, groups!",
        "photos": "Hello, photos!",
        "videos": "Hello, videos!",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should handle multiple plurals with no showCount (i.e. no named params)" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 143,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
        Object {
          "singular": true,
          "token": "number",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "There are {number} likes",
          "_1": "There are a like",
        },
        "_1": Object {
          "*": "There is {number} likes",
          "_1": "There is a like",
        },
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should handle names" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 81,
    "desc": "names",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "name",
          "type": 1,
        },
      ],
      "t": Object {
        "*": "You just friended {name}",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should handle object pronoun" 1`] = `
Array [
  Object {
    "col_beg": 9,
    "col_end": 109,
    "desc": "object pronoun",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "*": "You wished them a happy birthday.",
        "1": "You wished her a happy birthday.",
        "2": "You wished him a happy birthday.",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should handle params" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 110,
    "desc": "Moar params",
    "filepath": undefined,
    "jsfbt": "A parameterized message to {personName}",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should handle plurals" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 162,
    "desc": "plurals",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
        Object {
          "singular": true,
          "token": "number",
          "type": 2,
        },
      ],
      "t": Object {
        "*": Object {
          "*": "There were {number} likes",
          "_1": "There were a like",
        },
        "_1": Object {
          "*": "There was {number} likes",
          "_1": "There was a like",
        },
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should handle possessive pronoun" 1`] = `
Array [
  Object {
    "col_beg": 9,
    "col_end": 104,
    "desc": "possessive pronoun",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
      ],
      "t": Object {
        "*": "It is their birthday.",
        "1": "It is her birthday.",
        "2": "It is his birthday.",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should handle subject and reflexive pronouns" 1`] = `
Array [
  Object {
    "col_beg": 9,
    "col_end": 176,
    "desc": "subject+reflexive pronouns",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        null,
        null,
      ],
      "t": Object {
        "*": Object {
          "*": "They wished themselves a happy birthday.",
          "0": "They wished themself a happy birthday.",
          "1": "They wished herself a happy birthday.",
          "2": "They wished himself a happy birthday.",
        },
        "1": Object {
          "*": "She wished themselves a happy birthday.",
          "0": "She wished themself a happy birthday.",
          "1": "She wished herself a happy birthday.",
          "2": "She wished himself a happy birthday.",
        },
        "2": Object {
          "*": "He wished themselves a happy birthday.",
          "0": "He wished themself a happy birthday.",
          "1": "He wished herself a happy birthday.",
          "2": "He wished himself a happy birthday.",
        },
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should handle variations + same param" 1`] = `
Array [
  Object {
    "col_beg": 0,
    "col_end": 171,
    "desc": "test variations + sameParam",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "count",
          "type": 2,
        },
      ],
      "t": Object {
        "*": "You have {count} likes. Comment on it to get more than {count} likes",
      },
    },
    "line_beg": 3,
    "line_end": 3,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should handle variations" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 94,
    "desc": "variations!",
    "filepath": undefined,
    "jsfbt": Object {
      "m": Array [
        Object {
          "token": "count",
          "type": 2,
        },
      ],
      "t": Object {
        "*": "Click to see {count} links",
      },
    },
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "table",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should handler wrapping parens" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 50,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
  Object {
    "col_beg": 8,
    "col_end": 52,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 3,
    "line_end": 3,
    "project": "",
    "type": "text",
  },
  Object {
    "col_beg": 8,
    "col_end": 52,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 4,
    "line_end": 4,
    "project": "",
    "type": "text",
  },
  Object {
    "col_beg": 8,
    "col_end": 54,
    "desc": "desc",
    "filepath": undefined,
    "jsfbt": "foobarbazqux",
    "line_beg": 5,
    "line_end": 5,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should insert param in place of fbt.sameParam if it exists" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 76,
    "desc": "d",
    "filepath": undefined,
    "jsfbt": "{name1} and {name1}",
    "line_beg": 2,
    "line_end": 2,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should maintain intra-argument newlines" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 1,
    "desc": "a",
    "filepath": undefined,
    "jsfbt": "{name1} blah {name2}",
    "line_beg": 2,
    "line_end": 9,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should maintain newlines when using templates" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 9,
    "desc": "blah",
    "filepath": undefined,
    "jsfbt": "A simple string... with some other stuff.",
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should maintain newlines within arguments" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 1,
    "desc": "a",
    "filepath": undefined,
    "jsfbt": "a b {name1} c d {name2} e",
    "line_beg": 2,
    "line_end": 11,
    "project": "",
    "type": "text",
  },
]
`;

exports[`Test fbt meta-data collection should collect correct meta data for scenario "should maintain newlines" 1`] = `
Array [
  Object {
    "col_beg": 8,
    "col_end": 9,
    "desc": "blah",
    "filepath": undefined,
    "jsfbt": "A simple string... with some other stuff.",
    "line_beg": 2,
    "line_end": 5,
    "project": "",
    "type": "text",
  },
]
`;
